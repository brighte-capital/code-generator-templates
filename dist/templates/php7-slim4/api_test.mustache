<?php

declare(strict_types=1);

{{#operations}}
namespace {{apiPackage}};

use Psr\Container\ContainerInterface;
use Psr\Http\Message\ServerRequestInterface;
use Slim\Psr7\Response;

/**
 * @coversDefaultClass \{{apiPackage}}\{{userClassname}}
 */
class {{userClassname}}Test extends \Tests\BaseUnitTestCase
{
    private \Psr\Container\ContainerInterface $container;

    private \{{apiPackage}}\{{userClassname}} $api;

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
        parent::setup();
        $this->container = $this->createMock(ContainerInterface::class);
        $this->api = new {{userClassname}}($this->container);
    }
    {{#operation}}

    /**
     * @covers ::__construct
     * @covers ::{{{operationId}}}
     */
    public function test{{operationIdCamelCase}}(): void
    {
        $request = $this->createMock(ServerRequestInterface::class);
        $response = new Response();
        $response = $this->api->{{operationId}}($request, $response, []);
    }
    {{/operation}}
}
{{/operations}}
